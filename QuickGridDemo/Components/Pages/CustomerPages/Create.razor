@page "/customers/create"
@using Microsoft.EntityFrameworkCore
@using QuickGridDemo.Data
@using QuickGridDemo.Models
@inject IDbContextFactory<QuickGridDemo.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Customer</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Customer" OnValidSubmit="AddCustomer" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="customerid" class="form-label">CustomerID:</label>
                <InputText id="customerid" @bind-Value="Customer.CustomerID" class="form-control" />
                <ValidationMessage For="() => Customer.CustomerID" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="companyname" class="form-label">CompanyName:</label> 
                <InputText id="companyname" @bind-Value="Customer.CompanyName" class="form-control" /> 
                <ValidationMessage For="() => Customer.CompanyName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="contactname" class="form-label">ContactName:</label> 
                <InputText id="contactname" @bind-Value="Customer.ContactName" class="form-control" /> 
                <ValidationMessage For="() => Customer.ContactName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="contacttitle" class="form-label">ContactTitle:</label> 
                <InputText id="contacttitle" @bind-Value="Customer.ContactTitle" class="form-control" /> 
                <ValidationMessage For="() => Customer.ContactTitle" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label> 
                <InputText id="address" @bind-Value="Customer.Address" class="form-control" /> 
                <ValidationMessage For="() => Customer.Address" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="city" class="form-label">City:</label> 
                <InputText id="city" @bind-Value="Customer.City" class="form-control" /> 
                <ValidationMessage For="() => Customer.City" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="region" class="form-label">Region:</label> 
                <InputText id="region" @bind-Value="Customer.Region" class="form-control" /> 
                <ValidationMessage For="() => Customer.Region" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="postalcode" class="form-label">PostalCode:</label> 
                <InputText id="postalcode" @bind-Value="Customer.PostalCode" class="form-control" /> 
                <ValidationMessage For="() => Customer.PostalCode" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="country" class="form-label">Country:</label> 
                <InputText id="country" @bind-Value="Customer.Country" class="form-control" /> 
                <ValidationMessage For="() => Customer.Country" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="phone" class="form-label">Phone:</label> 
                <InputText id="phone" @bind-Value="Customer.Phone" class="form-control" /> 
                <ValidationMessage For="() => Customer.Phone" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="fax" class="form-label">Fax:</label> 
                <InputText id="fax" @bind-Value="Customer.Fax" class="form-control" /> 
                <ValidationMessage For="() => Customer.Fax" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/customers">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Customer Customer { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddCustomer()
    {
        using var context = DbFactory.CreateDbContext();
        context.Customers.Add(Customer);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/customers");
    }
}
